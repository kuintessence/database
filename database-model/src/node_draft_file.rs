//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "node_draft_file")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub flow_draft_id: Uuid,
    #[sea_orm(primary_key, auto_increment = false)]
    pub node_external_id: Uuid,
    pub plot_descriptor: Option<String>,
    #[sea_orm(primary_key, auto_increment = false)]
    pub file_metadata_id: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::file_metadata::Entity",
        from = "Column::FileMetadataId",
        to = "super::file_metadata::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    FileMetadata,
    #[sea_orm(
        belongs_to = "super::flow_draft::Entity",
        from = "Column::FlowDraftId",
        to = "super::flow_draft::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    FlowDraft,
}

impl Related<super::file_metadata::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FileMetadata.def()
    }
}

impl Related<super::flow_draft::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FlowDraft.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
