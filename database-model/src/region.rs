//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "region")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub name: String,
    pub address: String,
    pub location: Json,
    pub organization_id: Option<Uuid>,
    pub postal_code: String,
    pub mailing_address: String,
    pub provider_id: Option<Uuid>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::available_zone::Entity")]
    AvailableZone,
}

impl Related<super::available_zone::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AvailableZone.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
