//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "project")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub name: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
    pub created_by: Uuid,
    #[sea_orm(column_type = "Text", nullable)]
    pub logo: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::flow_draft::Entity")]
    FlowDraft,
    #[sea_orm(has_many = "super::flow_instance::Entity")]
    FlowInstance,
    #[sea_orm(has_many = "super::project_user::Entity")]
    ProjectUser,
}

impl Related<super::flow_draft::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FlowDraft.def()
    }
}

impl Related<super::flow_instance::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FlowInstance.def()
    }
}

impl Related<super::project_user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ProjectUser.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
